package io.github.tobyrue.btc.mixin;

import io.github.tobyrue.btc.item.ModItems;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.inventory.Inventory;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.registry.Registries;
import net.minecraft.screen.EnchantmentScreenHandler;
import net.minecraft.screen.ScreenHandler;
import net.minecraft.state.property.Property;
import org.spongepowered.asm.mixin.Final;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;

@Mixin(EnchantmentScreenHandler.class)
public abstract class EnchantingTableMixin {
    @Shadow @Final private Inventory inventory;
    @Shadow @Final public int[] enchantmentPower;
    @Shadow @Final public int[] enchantmentId;
    @Shadow @Final public int[] enchantmentLevel;


    @Inject(method = "onContentChanged", at = @At("TAIL"))
    private void onPaperPlaced(Inventory inventory, CallbackInfo ci) {
        if (inventory != this.inventory) return;

        ItemStack itemStack = inventory.getStack(0);
        if (itemStack.isOf(Items.PAPER)) {
            enchantmentPower[0] = 30;  // XP cost shown
            enchantmentId[0] = 30;
            enchantmentLevel[0] = 30; //Actual cost

            enchantmentPower[1] = 0;
            enchantmentPower[2] = 0;
            enchantmentId[1] = -1;
            enchantmentId[2] = -1;
            enchantmentLevel[1] = -1;
            enchantmentLevel[2] = -1;

            ((ScreenHandler)(Object)this).sendContentUpdates();
        }
    }

    @Inject(method = "onButtonClick", at = @At("HEAD"), cancellable = true)
    private void onPaperEnchant(PlayerEntity player, int id, CallbackInfoReturnable<Boolean> cir) {
        if (id < 0 || id >= enchantmentPower.length) return;

        ItemStack input = inventory.getStack(0);
        ItemStack lapis = inventory.getStack(1);
        int cost = id + 1;

        if (input.isOf(Items.PAPER)) {
            if (enchantmentPower[id] <= 0) {
                cir.setReturnValue(false);
                return;
            }

            if ((lapis.isEmpty() || lapis.getCount() < cost) && !player.isCreative()) {
                cir.setReturnValue(false);
                return;
            }

            if (player.experienceLevel < cost && !player.getAbilities().creativeMode) {
                cir.setReturnValue(false);
                return;
            }

            if (!player.getAbilities().creativeMode) {
                player.addExperienceLevels(-cost);
            }

            lapis.decrementUnlessCreative(cost, player);

            inventory.setStack(0, new ItemStack(ModItems.ENCHANTED_PAPER));

            cir.setReturnValue(true);
        }
    }
}
